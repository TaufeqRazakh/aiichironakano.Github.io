require 'nokogiri'

courses = ["cs653/src/", "phys516/src/", "cs596/src/"]

def make_index(directory, children)
  fh = File.open(File.join(directory,"index.html"), "w")
  doc =  Nokogiri::HTML::Document.parse <<-EOHTML
  <h1>Index of #{ directory } </h1>
  <table>
  <tr><th>Name</th><th>Last modified</th><th>Size</th><th>Description</th></tr><tr><th colspan="5"><hr></th></tr>
  </table>
  <p>Automated index generated by using <a href="https://nokogiri.org/">Nokigiri</a></p>
  EOHTML
  p doc.to_html
  puts "children of this directory are #{children}"
  body = doc.at_css "body"
  body.add_previous_sibling "<head>
  <title>Index of #{ directory } </title></head>"
  
  children.each do |child|
    tr            = doc.at_css "table"
    tr.add_child "<tr>
    <td><a href = #{ File.join(child) }> #{ child } </a></td>
    <td> #{ File.new(File.join(directory, child)).mtime }</td><td align=\"right\">  - </td><td>&nbsp;</td></tr>"
  end
  puts doc.to_html
  doc.write_to(fh)
  puts "wrote to " + File.join(directory,"index.html")
  deeper_directories = children.map {|entry| File.join(directory, entry)}.select {|entry| File.directory? entry}
  find_contents(deeper_directories)
end

def find_contents(directories)
  directory_children_map = {}
  directories.each do |directory| 
    children          = Dir.entries(directory).select do |entry|
      !(entry == '.' || entry == '..' ) and !(entry == 'index.html')
    end
    directory_children_map[directory] = children   
  end
  p directory_children_map
  directory_children_map.each_pair do |directory, children|
    make_index(directory, children)
  end
end

find_contents(courses)


